#!/bin/bash

set -e

if ! command -v apt-get >/dev/null; then
  echo "Please make sure to run on a system with 'apt-get' on the PATH!"
  exit 1
fi

triplet_to_deb_arch() {
  if [ -n "$1" ]; then
    case "$1" in
      x64-*) echo amd64;;
      arm64-*) echo arm64;;
      *) echo "Unsupported triplet: $1"; return 1;;
    esac
  fi
}

triplet_to_gcc_arch() {
  if [ -n "$1" ]; then
    case "$1" in
      x64-*) echo x86-64;;
      arm64-*) echo aarch64;;
      *) echo "Unsupported triplet: $1"; return 1;;
    esac
  fi
}

deb_arch_to_mirror() {
  if [ -n "$1" ]; then
    case "$1" in
      amd64|i386) echo "http://archive.ubuntu.com/ubuntu";;
      *) echo "http://ports.ubuntu.com/ubuntu-ports";;
    esac
  fi
}

echo "==> Updating APT..."
sudo apt-get update

echo "==> Installing host dependencies with APT..."
host_deps=(
  autoconf-archive
  autotools-dev
  ccache
  cmake
  libtool
  nasm
  ninja-build
)
sudo apt-get install -y "${host_deps[@]}"

host="$VCPKG_DEFAULT_HOST_TRIPLET"
target="$VCPKG_DEFAULT_TRIPLET"

host_deb_arch="$(triplet_to_deb_arch "$host")"
target_deb_arch="$(triplet_to_deb_arch "$target")"
target_gcc_arch="$(triplet_to_gcc_arch "$target")"
target_mirror="$(deb_arch_to_mirror "$target_deb_arch")"

if [[ -n "$host" && -n "$target" && "$host" != "$target" ]]; then
  echo "==> Installing cross-compilation tools with APT..."
  sudo apt-get install -y "g++-$target_gcc_arch-linux-gnu"

  if [ -z "$(dpkg --print-foreign-architectures | grep "$target_arch")" ]; then
    echo "==> Adding target mirror to APT sources..."
    ubuntu_version="$(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f 2-)"
    sudo sed -i "s/deb \([a-z]\)/deb [arch=$host_deb_arch] \1/" /etc/apt/sources.list
    sudo bash -c "{ for repo_suffix in '' '-updates'; do echo \"deb [arch=$target_deb_arch] $target_mirror $ubuntu_version\$repo_suffix main multiverse universe\"; done; cat /etc/apt/sources.list; } > /etc/apt/sources.list.new"
    sudo mv /etc/apt/sources.list{.new,}
    cat /etc/apt/sources.list

    echo "==> Adding target architecture to APT..."
    sudo dpkg --add-architecture "$target_deb_arch"
    sudo apt-get update
  fi
fi

echo "==> Installing target dependencies with APT..."
target_deps=(
  libasound2-dev
  '^libxcb.*-dev'
  libx11-xcb-dev
  libgl1-mesa-dev
  libglu1-mesa-dev
  libsleef-dev
  libudev-dev
  libupower-glib-dev
  libxrender-dev
  libxi-dev
  libxkbcommon-dev
  libxkbcommon-x11-dev
  mesa-common-dev
)
if [ -n "$target_deb_arch" ]; then
  # We need the packages for the host architecture too, since some packages
  # (e.g. Qt) have to be built for the host too during cross compilation
  sudo apt-get install -y "${target_deps[@]}" "${target_deps[@]/%/:$target_deb_arch}"
else
  sudo apt-get install -y "${target_deps[@]}"
fi
